"use strict";(globalThis["webpackChunkadmin_quasar"]=globalThis["webpackChunkadmin_quasar"]||[]).push([[5269],{25269:(t,i,e)=>{function a(t,i,e,a,s,r){return null}e.r(i),e.d(i,{default:()=>u});e(10239);var s=e(99526)["A"];const r={mounted(){this.$nextTick((function(){this.getLimitEntities()}))},data(){return{crudId:this.$uid(),limitEntities:[]}},computed:{crudData(){return{crudId:this.crudId,entityName:s("main.qplan.entityNames.limit"),apiRoute:"apiRoutes.qplan.limits",permission:"iplan.limits",extraFormFields:"Iplan.crud-fields.limits",create:{title:this.$tr("iplan.cms.newLimit")},read:{columns:[{name:"id",label:this.$tr("isite.cms.form.id"),field:"id",style:"width: 50px"},{name:"name",label:this.$tr("isite.cms.form.name"),field:"name",align:"rigth"},{name:"entity",label:this.$tr("iplan.cms.form.entity"),field:"entity",align:"left",format:t=>{let i=this.entitiesOptions.find((i=>i.id==t));return i?.label||"-"}},{name:"attribute",label:this.$tr("iplan.cms.form.attribute"),field:"attribute",align:"left",format:t=>{let i=this.limitEntities.map((t=>t.attributes)).flat(),e=i.find((i=>i.value==t));return e?.label||"-"}},{name:"attributeValue",label:this.$tr("iplan.cms.form.attributeValue"),field:"attributeValue",align:"left",format:t=>{let i=this.limitEntities.map((t=>t.attributes)).flat(),e=i.map((t=>t.options)).flat(),a=e.find((i=>i.value==t));return a?.label||"-"}},{name:"quantity",label:this.$tr("isite.cms.form.quantity"),field:"quantity",align:"rigth"},{name:"created_at",label:this.$tr("isite.cms.form.createdAt"),field:"createdAt",align:"left",format:t=>t?this.$trd(t):"-"},{name:"actions",label:this.$tr("isite.cms.form.actions"),align:"left"}],requestParams:{filter:{order:{field:"created_at",way:"desc"}}}},update:{title:this.$tr("iplan.cms.updateLimit")},delete:!0,formLeft:{id:{value:""},name:{value:"",type:"input",props:{label:`${this.$tr("isite.cms.form.name")}*`,rules:[t=>!!t||this.$tr("isite.cms.message.fieldRequired")]}},entity:{value:"",type:"select",props:{label:`${this.$tr("iplan.cms.form.entity")}*`,clearable:!1,options:this.entitiesOptions}},attribute:{value:"",type:"select",props:{label:`${this.$tr("iplan.cms.form.attribute")}`,options:this.attributeOptions,vIf:this.attributeOptions.length,clearable:!0}},attributeValue:{value:"",type:"select",props:{label:`${this.$tr("iplan.cms.form.attributeValue")}*`,options:this.attributeValueOptions,vIf:this.attributeValueOptions.length}},quantity:{value:"1",type:"input",props:{label:`${this.$tr("iplan.cms.form.quantity")}*`,type:"number",min:"1",rules:[t=>!!t||this.$tr("isite.cms.message.fieldRequired")]}}}}},crudInfo(){return this.$store.state.qcrudComponent.component[this.crudId]||{}},attributeValueOptions(){if(!this.crudInfo.attribute)return[];let t=this.$array.findByTag(this.limitEntities,"entity",this.crudInfo.entity),i=this.$array.findByTag(t.attributes,"value",this.crudInfo.attribute);return i.options},attributeOptions(){if(!this.crudInfo.entity)return[];let t=this.$array.findByTag(this.limitEntities,"entity",this.crudInfo.entity);return t.attributes},entitiesOptions(){return this.$array.select(this.limitEntities,{id:"entity",label:"name"})}},methods:{getLimitEntities(){return new Promise(((t,i)=>{let e={refresh:!0,params:{filter:{allTranslations:!0,configNameByModule:"config.limitableEntities"}}};this.$crud.index("apiRoutes.qsite.configs",e).then((i=>{if(i.data){let t=[];Object.values(i.data).forEach((i=>{i&&i.forEach((i=>{i&&i.status&&t.push(i)}))})),this.limitEntities=t}t(!0)})).catch((t=>{this.$apiResponse.handleError(t,(()=>{this.$alert.error({message:this.$tr("isite.cms.message.errorRequest"),pos:"bottom"}),i(!1)}))}))}))}}};var l=e(12807);const n=(0,l.A)(r,[["render",a]]),u=n}}]);