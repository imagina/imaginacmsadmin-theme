"use strict";(globalThis["webpackChunkimagina_cms"]=globalThis["webpackChunkimagina_cms"]||[]).push([[3412],{93412:(t,e,s)=>{function i(t,e,s,i,a,l){return null}s.r(e),s.d(e,{default:()=>d});var a=s(18528)["c"];const l={data(){return{crudId:this.$uid(),planModules:[]}},computed:{crudData(){return{crudId:this.crudId,entityName:a("main.qplan.entityNames.entityPlan"),apiRoute:"apiRoutes.qplan.entityPlans",permission:"iplan.entityplans",extraFormFields:"Iplan.crud-fields.entityPlans",create:{title:this.$tr("iplan.cms.newEntityPlan")},read:{columns:[{name:"id",label:this.$tr("isite.cms.form.id"),field:"id",style:"width: 50px"},{name:"module",label:this.$tr("iplan.cms.form.module"),field:"module"},{name:"entityName",label:this.$tr("iplan.cms.form.entity"),field:"entityName"},{name:"status",label:this.$tr("isite.cms.form.status"),field:"status"},{name:"created_at",label:this.$tr("isite.cms.form.createdAt"),field:"createdAt",align:"left",format:t=>t?this.$trd(t):"-"},{name:"actions",label:this.$tr("isite.cms.form.actions"),align:"left"}],requestParams:{filter:{order:{field:"created_at",way:"desc"}}}},update:{title:this.$tr("iplan.cms.updateEntityPlan")},delete:!0,formLeft:{id:{value:""},module:{value:"",type:"select",props:{label:`${this.$tr("iplan.cms.form.module")}*`,rules:[t=>!!t||this.$tr("isite.cms.message.fieldRequired")],options:this.moduleOptions}},entity:{value:"",type:"select",props:{label:`${this.$tr("iplan.cms.form.entity")}*`,rules:[t=>!!t||this.$tr("isite.cms.message.fieldRequired")],options:this.entityOptions,vIf:this.entityOptions.length}},status:{value:"1",type:"select",props:{label:`${this.$tr("isite.cms.form.status")}*`,options:[{label:this.$tr("isite.cms.label.enabled"),value:"1"},{label:this.$tr("isite.cms.label.disabled"),value:"0"}],rules:[t=>!!t||this.$tr("isite.cms.message.fieldRequired")]}}}}},crudInfo(){return this.$store.state.qcrudComponent.component[this.crudId]||{}},moduleOptions(){return this.$array.select(this.planModules,{id:"value",label:"label"})},entityOptions(){if(!this.crudInfo.module)return[];let t=this.$array.findByTag(this.planModules,"value",this.crudInfo.module);return this.$array.select(t.entities,{id:"entity",label:"name"})}},mounted(){this.getPlanEntities()},methods:{getPlanEntities(){return new Promise(((t,e)=>{let s="apiRoutes.qplan.planModules",i={refresh:!0,params:{filter:{allTranslations:!0}}};this.$crud.index(s,i).then((e=>{this.planModules=e.data,t(!0)})).catch((t=>{this.$apiResponse.handleError(t,(()=>{this.$alert.error({message:this.$tr("isite.cms.message.errorRequest"),pos:"bottom"}),e(!1)}))}))}))}}};var r=s(68716);const n=(0,r.c)(l,[["render",i]]),d=n}}]);